variables:
  # REPOSITORY_ACCESS_TOKEN (deploy token 발급 후 CI/CD variables에 등록하세요)
  REMOTE_REPOSITORY: "https://oauth2:$REPOSITORY_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"

lint-openapi:
  stage: generate-openapi-docs-html
  image: python:3.9.13-slim
  before_script:
    - pip install openapi-spec-validator
  script:
    - openapi-spec-validator openapi.json
  needs:
    - job: get-api-spec
  rules:
    - if: '$CI_MERGE_REQUEST_ID == null'
      changes:
        - app/**/*

render-html:
  stage: generate-openapi-docs-html
  image: node:lts-alpine3.19
  before_script:
    - npm i -g @redocly/cli@latest
  script:
    - redocly build-docs openapi.json --output=docs.html
  needs:
    - job: lint-openapi
      artifacts: false
    - job: get-api-spec
  artifacts:
    paths:
      - "*.html"
  rules:
    - if: '$CI_MERGE_REQUEST_ID == null'
      changes:
        - app/**/*

deploy-api-docs:
  image: python:3.9.17-buster
  stage: generate-openapi-docs-html
  before_script:
    - git config --global user.email $GITLAB_USER_EMAIL
    - git config --global user.name $GITLAB_USER_NAME
  script:
    - export DOCUMENT=$(ls | grep '\.html$')
    - git clone $CI_REPOSITORY_URL
    - cd $CI_PROJECT_NAME
    - git checkout $CI_COMMIT_BRANCH
    - export VERSION=$(cat docs/version.txt)
    - mkdir -p ./docs/docs/api
    # 임시 파일 생성
    - echo "<html><body><h1>API Documentation</h1></body></html>" > ./docs/docs/api/docs.html
    - cp ../$DOCUMENT ./docs/docs/api/$DOCUMENT
    - git add .
    - git status
    - |-
      if ! git diff-index --quiet HEAD --; then
        git commit -m "UPDATE $DOCUMENT"
        git push $REMOTE_REPOSITORY $CI_COMMIT_BRANCH
        cd ..
        cat <<EOF > generated-config.yml
        stages:
          - trigger-mkdocs
        end-pipeline:
          stage: trigger-mkdocs
          script:
            - echo "api 변경사항 감지"
          rules:
            - if: "\$CI_MERGE_REQUEST_ID == null"
              changes:
                - app/**/*
      EOF
      else
        cd ..
        cat <<EOF > generated-config.yml
        stages:
          - trigger-mkdocs
        trigger-pipeline:
          stage: trigger-mkdocs
          trigger:
            include:
              - project: wisenut-research/starter/gitlab-ci-template
                ref: main
                file:
                  - templates/Mkdocs/common/Mkdocs.gitlab-ci.yml
          rules:
            - if: "\$CI_MERGE_REQUEST_ID == null"
              changes:
                - app/**/*
      EOF
      fi
  artifacts:
    paths:
      - generated-config.yml
  needs:
    - job: render-html
  rules:
    - if: '$CI_MERGE_REQUEST_ID == null'
      changes:
        - app/**/*

check-trigger:
  stage: generate-openapi-docs-html
  trigger:
    include:
      - artifact: generated-config.yml
        job: deploy-api-docs
  needs:
    - job: deploy-api-docs
  rules:
    - if: '$CI_MERGE_REQUEST_ID == null'
      changes:
        - app/**/*