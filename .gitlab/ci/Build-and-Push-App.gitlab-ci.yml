build-and-push-app:
  tags:
    - saas-linux-medium-amd64 # 16GB Memory, 50GB storage
  stage: build-and-push-app
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    PIPELINE_SEQUENCE: $CI_PIPELINE_IID
    TZ: "Asia/Seoul"
    FF_TIMESTAMPS: true
    IMAGE_TAG_LATEST: "$CI_REGISTRY_IMAGE:latest"
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - apk add --no-cache tzdata
    - export TZ=Asia/Seoul
    - |
      set -o allexport
      source .env
      VERSION=${MAJOR_VERSION}.$(date +'%y%m.%d')-${STATUS}-$CI_COMMIT_SHORT_SHA
      set +o allexport
    - IMAGE_TAG=$CI_REGISTRY_IMAGE:$VERSION
    - X_TOKEN=${X_TOKEN}
    - BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')
    - |
      echo "version: str = '$VERSION'" > version_info.py
      echo "git_branch: str = '$CI_COMMIT_BRANCH'" >> version_info.py
      echo "git_revision: str = '$CI_COMMIT_SHA'" >> version_info.py
      echo "git_short_revision: str = '$CI_COMMIT_SHORT_SHA'" >> version_info.py
      echo "build_date: str = '$BUILD_DATE'" >> version_info.py
  script: # docker image cache를 사용하여 이미지 빌드, 컨테이너 레지스트리 푸시 진행
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_TAG_LATEST || true # 마지막 이미지 가져오기
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $IMAGE_TAG_LATEST -t $IMAGE_TAG -t $IMAGE_TAG_LATEST . # 마지막 이미지를 캐시로 사용
    - docker push $IMAGE_TAG
    - docker push $IMAGE_TAG_LATEST
  only:
    - main